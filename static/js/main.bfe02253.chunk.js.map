{"version":3,"sources":["CalorieCounter/CalorieCounterHeader.js","CalorieCounter/CalorieCounterColumnHeaders.js","CalorieCounter/CalorieCounterContainer/CalorieCounterFoodItem.js","CalorieCounter/CalorieCounterContainer/CalorieCounterFoodList.js","CalorieCounter/CalorieCounterContainer/CalorieCounterInputs.js","CalorieCounter/CalorieCounterContainer/CalorieCounterTotals.js","CalorieCounter/CalorieCounterContainer/CalorieCounterModels/FoodItemModel.js","CalorieCounter/CalorieCounterContainer/CalorieCounterModels/FoodItemDataAccess.js","CalorieCounter/CalorieCounterContainer/CalorieCounterContainer.js","CalorieCounter/CalorieCounterCard.js","App.js","serviceWorker.js","index.js"],"names":["CalorieCounterHeader","react_default","a","createElement","className","CalorieCounterColumnHeaders","CalorieCounterFoodItem","props","description","calories","fat","onClick","_","handleFoodDeletion","index","CalorieCounterFoodList","foodItems","length","foodListStyle","display","foods","map","food","key","id","style","FoodInput","type","name","placeholder","value","onChange","handleInputChange","handleFoodItemAdd","FoodTotals","foodTotals","FoodItemModel","lengthIsGreaterThan0","Error","Number","this","argument","trim","FoodItemDataAccess","prototype","addFoodItem","FoodItem","push","removeFoodItem","splice","getFoodItems","getFoodTotals","forEach","foodItem","CalorieCounterContainer","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","event","currentFoodItem","objectSpread","state","target","setState","foodItemsDataAccess","error","alert","message","newFoodItem","Component","CalorieCounterCard","CalorieCounterContainer_CalorieCounterContainer","App","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bfe02253.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function CalorieCounterHeader() {\n    return (\n        <header className=\"calorie-counter__header\">\n            <i className=\"fas fa-heartbeat calorie-counter__header-icon\"></i>\n            <h1 className=\"calorie-counter__title\">React Calorie Counter</h1>\n        </header>\n    )\n}","import React from 'react';\nimport '../index.css';\nimport './CalorieCounter.css';\n\nexport default function CalorieCounterColumnHeaders(){\n    return (\n        <ul className=\"list calorie-counter__group calorie-counter__label-group\">\n            <li className=\"calorie-counter__label\">Description</li>\n            <li className=\"calorie-counter__label\">Calories</li>\n            <li className=\"calorie-counter__label\">Fat</li>\n            <li className=\"calorie-counter__label\"><i className=\"fas fa-times calorie-counter__dummy-icon\"></i></li>\n        </ul>\n    )\n}\n","import React from 'react';\nimport '../../index.css'\nimport '../CalorieCounter.css'\n\nexport default function CalorieCounterFoodItem(props) {\n\n    return (\n        <li className=\"calorie-counter__food-item\">\n            <ul className=\"list calorie-counter__group\">\n                <li><span className=\"calorie-counter__food-detail\">{props.description}</span></li>\n                <li><span className=\"calorie-counter__food-detail\">{props.calories}</span></li>\n                <li><span className=\"calorie-counter__food-detail\">{props.fat}</span></li>\n                <li className=\"calorie-counter__label\">\n                    <i className=\"fas fa-times calorie-counter__delete button\"\n                    onClick = { _ => {props.handleFoodDeletion(props.index)} }></i>\n                </li>\n            </ul>\n        </li>\n    );\n}","import React from 'react';\nimport '../../index.css';\nimport '../CalorieCounter.css';\nimport CalorieCounterFoodItem from './CalorieCounterFoodItem';\n\nexport default function CalorieCounterFoodList(props) {\n    if (props.foodItems.length === 0) var foodListStyle = { display: \"none\" };\n\n    let foods = props.foodItems.map((food, index) => {\n        return <CalorieCounterFoodItem key={food.id}\n            description={food.description}\n            calories={food.calories}\n            fat={food.fat}\n            handleFoodDeletion={props.handleFoodDeletion}\n            index={index} />\n    })\n\n    return (\n        <ul className=\"list calorie-counter__list-items\"\n            style={foodListStyle}> {foods}\n        </ul>\n    );\n\n}","import React from 'react';\nimport '../../index.css';\nimport '../CalorieCounter.css';\n\nexport default function FoodInput(props) {\n    return (\n        <ul className=\"list calorie-counter__group calorie-counter__inputs\">\n            <li>\n                <input type=\"text\" name=\"description\" className=\"calorie-counter__food-input\" \n                placeholder=\"Description\" value = {props.description} onChange = {props.handleInputChange}/>\n            </li>\n            <li>\n                <input type=\"number\" name = \"calories\" className=\"calorie-counter__food-input\" \n                placeholder=\"Calories\" value = {props.calories} onChange = {props.handleInputChange}/>\n            </li>\n            <li>\n                <input type=\"number\" name = \"fat\" className=\"calorie-counter__food-input\" \n                placeholder=\"Fat\" value = {props.fat} onChange = {props.handleInputChange}/>\n            </li>\n            <li className=\"calorie-counter__add button button--add\" onClick = {props.handleFoodItemAdd}>\n                <i className=\"fas fa-plus\"></i>\n            </li>\n            <li className=\"calorie-counter__label\">\n                <i className=\"fas fa-times calorie-counter__dummy-icon\"></i>\n            </li>\n        </ul>\n    )\n}","import React from 'react';\nimport '../../index.css';\nimport '../CalorieCounter.css';\n\nexport default function FoodTotals(props) {\n    return (\n        <ul className=\"list calorie-counter__group calorie-counter__totals\">\n            <li className=\"calorie-counter__label\">Totals</li>\n            <li className=\"calorie-counter__label\">{props.foodTotals.calories}</li>\n            <li className=\"calorie-counter__label\">{props.foodTotals.fat}</li>\n            <li className=\"calorie-counter__label\"><i className=\"fas fa-times calorie-counter__dummy-icon\"></i></li>\n        </ul>\n    );\n}","export default function FoodItemModel(id, description, calories, fat){\n    if (!lengthIsGreaterThan0(description)){\n        throw new Error(\"A description must be provided\");\n    }\n\n    if (!lengthIsGreaterThan0(calories)|| !lengthIsGreaterThan0(fat)){\n        throw new Error(\"Calories and fat must be provided\");\n    }\n\n    if (Number(calories) < 0 || Number(fat) < 0){\n        throw new Error(\"Calories and fat must be greater than 0\");\n    }\n\n    this.id = id;\n    this.description = description;\n    this.calories = calories;\n    this.fat = fat;\n}\n\nfunction lengthIsGreaterThan0(argument){\n    return argument.trim().length > 0;\n}","import FoodItemModel from './FoodItemModel.js';\n\nexport default function FoodItemDataAccess(){\n    this.foodItems = [];\n}\n\nFoodItemDataAccess.prototype.addFoodItem = function(FoodItem){\n    this.foodItems.push(FoodItem);\n}\n\nFoodItemDataAccess.prototype.removeFoodItem = function(index){\n    this.foodItems.splice(index, 1);\n}\n\n// Returns a deepy copy of the all the food items\nFoodItemDataAccess.prototype.getFoodItems = function(){\n    let deepCopy = this.foodItems.map(food =>{\n        return new FoodItemModel(food.id, food.description, food.calories, food.fat);\n    })\n    return deepCopy;\n}\n\nFoodItemDataAccess.prototype.getFoodTotals = function(){\n    let foodTotals = { calories: 0, fat: 0};\n\n    this.foodItems.forEach(foodItem =>{\n        foodTotals.calories += Number(foodItem.calories);\n        foodTotals.fat += Number(foodItem.fat);\n    })\n\n    return foodTotals;\n}","import React, { Component } from 'react';\nimport CalorieCounterFoodList from './CalorieCounterFoodList';\nimport CalorieCounterInputs from './CalorieCounterInputs';\nimport CalorieCounterTotals from './CalorieCounterTotals';\nimport FoodItemDataAccess from './CalorieCounterModels/FoodItemDataAccess'\nimport FoodItemModel from './CalorieCounterModels/FoodItemModel';\n\nexport default class CalorieCounterContainer extends Component {\n    constructor(props) {\n        super(props);\n        this.foodItemsDataAccess = new FoodItemDataAccess();\n        this.id = 10;\n\n        this.state = {\n            foodItems: this.foodItemsDataAccess.getFoodItems(),\n            foodTotals: this.foodItemsDataAccess.getFoodTotals(),\n            currentFoodItem: {\n                description: '',\n                calories: '',\n                fat: ''\n            }\n        }\n    }\n\n    handleInputChange = event => {\n        let currentFoodItem = { ...this.state.currentFoodItem };\n        currentFoodItem[event.target.name] = event.target.value;\n        this.setState({\n            currentFoodItem: currentFoodItem\n        })\n    }\n\n    handleFoodItemAdd = _ => {\n        try {\n            this.addFoodItem();\n            this.id++;\n\n            this.setState({\n                foodItems: this.foodItemsDataAccess.getFoodItems(),\n                foodTotals: this.foodItemsDataAccess.getFoodTotals(),\n                currentFoodItem: {\n                    description: '',\n                    calories: '',\n                    fat: ''\n                }\n            })\n        }\n\n        catch (error) {\n            alert(error.message);\n        }\n    }\n\n    addFoodItem = _ => {\n        let currentFoodItem = this.state.currentFoodItem;\n        let newFoodItem = new FoodItemModel(this.id, currentFoodItem.description,\n            currentFoodItem.calories, currentFoodItem.fat);\n\n        this.foodItemsDataAccess.addFoodItem(newFoodItem);\n    }\n\n    handleFoodDeletion = index => {\n        this.foodItemsDataAccess.removeFoodItem(index);\n        this.setState({\n            foodItems: this.foodItemsDataAccess.getFoodItems(),\n            foodTotals: this.foodItemsDataAccess.getFoodTotals()\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <CalorieCounterFoodList foodItems={this.state.foodItems} handleFoodDeletion = {this.handleFoodDeletion} />\n                <CalorieCounterTotals foodTotals={this.state.foodTotals} />\n                <CalorieCounterInputs description={this.state.currentFoodItem.description}\n                    calories={this.state.currentFoodItem.calories} fat={this.state.currentFoodItem.fat}\n                    handleInputChange={this.handleInputChange}\n                    handleFoodItemAdd={this.handleFoodItemAdd} />\n            </div>\n        );\n    }\n}","import React from 'react';\nimport '../index.css';\nimport './CalorieCounter.css';\nimport CalorieCounterHeader from './CalorieCounterHeader';\nimport CalorieCounterColumnHeaders from './CalorieCounterColumnHeaders';\nimport CalorieCounterContainer from './CalorieCounterContainer/CalorieCounterContainer';\n\nexport default function CalorieCounterCard() {\n    return (\n        <div className=\"calorie-counter\">\n            <div className=\"container\">\n                <CalorieCounterHeader />\n                <div className=\"calorie-counter__wrapper\">\n                    <CalorieCounterColumnHeaders />\n                    <CalorieCounterContainer/>\n                </div>\n            </div>\n        </div>\n    )\n}","import React from 'react';\nimport CalorieCounterCard from './CalorieCounter/CalorieCounterCard'\n\nfunction App() {\n  return (\n    <div>\n        <CalorieCounterCard/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}